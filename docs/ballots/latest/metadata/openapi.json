{
    "openapi": "3.0.0",
    "info": {
        "description": "The HL7 Health Services Platform Marketplace (HSPM or Marketplace) specification is a REST API for publication, cataloging, discovering, and deployment of products and executable knowledge into any compliant IT environment in an automated manner. It is similar to an app marketplace for health products in that it manages deployment to a users local infrastructural environment and data context. It is not a flat directory of SMART-on-FHIR and other UI-only applications, but MAY be used for this purpose. A Marketplace can be implemented by vendors, providers, standards developing organizations (SDOs), consortiums, and all manner of parties interested in interoperable products.",
        "version": "2.0.0",
        "title": "Health Services Platform Marketplace Specification",
        "termsOfService": "https://www.logicahealth.org",
        "contact": {
            "url": "https://www.logicahealth.org",
            "email": "preston.lee@logicahealth.org"
        }
    },
    "tags": [
        {
            "name": "Product Services",
            "description": "A Product is a structured declaration of capabilities for a package of executable or consumable content, with release managed in a discrete lifecycle. A CDS Hooks or FHIR Terminology service “ExampleService” developed by vendor “ExampleSoft”, for example, would be declared to a Marketplace instance prior to actual release of the software to establish descriptive text, create screenshots, set standards-related declarations, and other fields."
        },
        {
            "name": "Product Operations"
        },
        {
            "name": "Product Build Services"
        },
        {
            "name": "Product Build Dependency Services"
        },
        {
            "name": "Product Build Configuration Services"
        },
        {
            "name": "Product Build Configuration Task Services"
        },
        {
            "name": "Product Build Exposure Services"
        },
        {
            "name": "Product License Services"
        },
        {
            "name": "Product Logo Services"
        },
        {
            "name": "Product Screenshot Services"
        },
        {
            "name": "Platform Services"
        },
        {
            "name": "Interface Services",
            "description": "Marketplace-wide declaration of a standardized – or at least conventionalized – computational integration point. They are not constraints to HL7 standards.  "
        },
        {
            "name": "License Services",
            "description": "Licenses are globally declared terms of use, and MAY or MAY NOT be useful in all contexts. As discussed in , this is expected to be customized to the local sales and business model. Implementors and operators only focused on F/OSS Services may be satisfied by the barebones model."
        },
        {
            "name": "Identity Provider Services",
            "description": "An IdentityProvider is a deployment-specific resource containing client configuration information for a resource OpenID Connect authentication/authorization server. This information changes very infrequently. Of special note is the “public_keys” field, which SHOULD be polled and updated automatically. Issuers typically cycle through keys pairs frequently and failing to update them will result in failed User authentication flows.      "
        },
        {
            "name": "User Services",
            "description": "A distinct person or system with some degree of access or interest to a Marketplace instance."
        },
        {
            "name": "Group Services",
            "description": "A named collection of Users for purposes of batch Role assignment."
        },
        {
            "name": "Role Services",
            "description": "A named set of permissions."
        },
        {
            "name": "Role Appointment Services"
        },
        {
            "name": "Entitlement Services"
        },
        {
            "name": "Entitlement Claim Services"
        },
        {
            "name": "Attempt Services"
        }
    ],
    "paths": {
        "/licenses": {
            "get": {
                "tags": [
                    "License Services"
                ],
                "summary": "Returns the list of licenses available in the marketplace",
                "parameters": [
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "operationId": "getLicenses",
                "responses": {
                    "200": {
                        "description": "License",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/license"
                                    },
                                    "xml": {
                                        "name": "licenses"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/license"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "License Services"
                ],
                "summary": "Adds a new license to the marketplace",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/requestBodies/License"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/requestBodies/License"
                            }
                        }
                    },
                    "description": "License to be added to the marketplace",
                    "required": true
                },
                "operationId": "createLicense",
                "responses": {
                    "200": {
                        "description": "Add License was succesful",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "245b3a76-9768-48ac-907f-0dc45174515f"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "License Services"
                ],
                "summary": "Updates the license",
                "parameters": [
                    {
                        "in": "path",
                        "name": "license_id",
                        "required": true,
                        "description": "Id of the license to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/license"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/license"
                            }
                        }
                    },
                    "description": "License to be added to the marketplace",
                    "required": true
                },
                "operationId": "updateLicense",
                "responses": {
                    "200": {
                        "description": "True for updated"
                    }
                }
            }
        },
        "/licenses/{license_id}": {
            "get": {
                "tags": [
                    "License Services"
                ],
                "summary": "Retrieves the license based on license id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "license_id",
                        "required": true,
                        "description": "Id of the license to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "operationId": "getLicense",
                "responses": {
                    "200": {
                        "description": "License located using id",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/license"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/license"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "License Services"
                ],
                "summary": "Deletes the license by Id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "license_id",
                        "required": true,
                        "description": "Id of the license to delete",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "operationId": "deleteLicense",
                "responses": {
                    "200": {
                        "description": "True if delete was successful"
                    }
                }
            }
        },
        "/products": {
            "get": {
                "tags": [
                    "Product Services"
                ],
                "summary": "Returns the list of products available in marketplace",
                "parameters": [
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "operationId": "getProducts",
                "responses": {
                    "200": {
                        "description": "License",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/product"
                                    },
                                    "xml": {
                                        "name": "products"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/product"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Product Services"
                ],
                "summary": "Adds a new product to the marketplace",
                "parameters": [
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/product"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/product"
                            }
                        }
                    }
                },
                "description": "Adds a new product to the marketplace",
                "operationId": "addProduct",
                "responses": {
                    "200": {
                        "description": "Add Product was succesful",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "245b3a76-9768-48ac-907f-0dc45174515f"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Product Services"
                ],
                "summary": "Updates the product",
                "parameters": [
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "Update a product to the marketplace",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/requestBodies/Product"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/requestBodies/Product"
                            }
                        }
                    }
                },
                "operationId": "updateService",
                "responses": {
                    "200": {
                        "description": "Update Product was successful"
                    }
                }
            }
        },
        "/products/{product_id}/licenses": {
            "get": {
                "tags": [
                    "Product License Services"
                ],
                "summary": "Returns the list of licenses based on product id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the product to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "operationId": "getProductLicenses",
                "responses": {
                    "200": {
                        "description": "Product located using id",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/license"
                                    },
                                    "xml": {
                                        "name": "licenses"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/license"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Product License Services"
                ],
                "summary": "Adds a new license based on product id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the product to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "license_id",
                        "description": "license_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "description": "Adds a new license to the product identified by id",
                "operationId": "addProductlicense",
                "responses": {
                    "200": {
                        "description": "Add Product was succesful",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "245b3a76-9768-48ac-907f-0dc45174515f"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/products/{product_id}": {
            "get": {
                "tags": [
                    "Product Services"
                ],
                "summary": "Retrieves the product based on product id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the product to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "operationId": "getService",
                "responses": {
                    "200": {
                        "description": "Product located using id",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/product"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/product"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Product Services"
                ],
                "summary": "Deletes the product based on product id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the product to delete",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "description": "format",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "description": "",
                "operationId": "deleteService",
                "responses": {
                    "200": {
                        "description": "Delete Succesful"
                    }
                }
            }
        },
        "/products/{product_id}/publish": {
            "post": {
                "tags": [
                    "Product Operations"
                ],
                "summary": "Publishes product based on product Id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the product to publish",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "description": "Publishes product based on the product Id",
                "operationId": "publishService",
                "responses": {
                    "200": {
                        "description": "Publish Succesful"
                    }
                }
            }
        },
        "/products/{product_id}/unpublish": {
            "post": {
                "tags": [
                    "Product Operations"
                ],
                "summary": "Unpublishes the product base on the product Id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the product to unpublish",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "operationId": "unpublishService",
                "responses": {
                    "200": {
                        "description": "Unpublish Succesful"
                    }
                }
            }
        },
        "/products/{product_id}/builds": {
            "get": {
                "tags": [
                    "Product Build Services"
                ],
                "summary": "Returns the list of builds based on product id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the products to add build to",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "operationId": "getBuilds",
                "responses": {
                    "200": {
                        "description": "License",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/license"
                                    },
                                    "xml": {
                                        "name": "builds"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/license"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Product Build Services"
                ],
                "summary": "Adds a new build based on product id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the products to add build to",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/requestBodies/Build"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/requestBodies/Build"
                            }
                        }
                    }
                },
                "operationId": "addBuild",
                "responses": {
                    "200": {
                        "description": "Add Build Succesful",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "245b3a76-9768-48ac-907f-0dc45174515f"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Product Build Services"
                ],
                "summary": "Updates the build based on product id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the product to update",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "build_id",
                        "required": true,
                        "description": "Id of the products to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/requestBodies/Build"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/requestBodies/Build"
                            }
                        }
                    }
                },
                "operationId": "updateBuild",
                "responses": {
                    "200": {
                        "description": "Update Succesful"
                    }
                }
            }
        },
        "/products/{product_id}/builds/{build_id}": {
            "get": {
                "tags": [
                    "Product Build Services"
                ],
                "summary": "Retrieves the build based on build and product id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the products to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "build_id",
                        "required": true,
                        "description": "Id of the products to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "operationId": "getBuild",
                "responses": {
                    "200": {
                        "description": "Build located using product Id and build Id",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/build"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/build"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Product Build Services"
                ],
                "summary": "Deletes the product based on product id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the product to delete",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "build_id",
                        "required": true,
                        "description": "Id of the products to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "description": "format",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "description": "",
                "operationId": "deleteBuild",
                "responses": {
                    "200": {
                        "description": "Delete Succesful"
                    }
                }
            }
        },
        "/interfaces": {
            "post": {
                "tags": [
                    "Interface Services"
                ],
                "summary": "Adds a new interface to the marketplace",
                "parameters": [
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/Interface"
                },
                "description": "Adds a new interface to the marketplace",
                "operationId": "addInterface",
                "responses": {
                    "200": {
                        "description": "Add Interface was succesful",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "245b3a76-9768-48ac-907f-0dc45174515f"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Interface Services"
                ],
                "summary": "Updates the interface",
                "parameters": [
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/Interface"
                },
                "description": "",
                "operationId": "updateInterface",
                "responses": {
                    "200": {
                        "description": "Update Succesful"
                    }
                }
            }
        },
        "/interfaces/{interface_id}": {
            "get": {
                "tags": [
                    "Interface Services"
                ],
                "summary": "Retrieves the interface based on interface id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "interface_id",
                        "required": true,
                        "description": "Id of the interface to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "operationId": "getInterface",
                "responses": {
                    "200": {
                        "description": "Interface",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/interface"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/interface"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Interface Services"
                ],
                "summary": "Deletes the interface based on interface id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "interface_id",
                        "required": true,
                        "description": "Id of the license to delete",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "description": "format",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "description": "",
                "operationId": "deleteInterface",
                "responses": {
                    "200": {
                        "description": "Delete Succesful"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "User Services"
                ],
                "summary": "Returns the list of users",
                "parameters": [
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "operationId": "getUsers",
                "responses": {
                    "200": {
                        "description": "User located using id",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/user"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/user"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User Services"
                ],
                "summary": "Adds a new user",
                "parameters": [
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/User"
                },
                "description": "Adds a new User",
                "operationId": "addUser",
                "responses": {
                    "200": {
                        "description": "Add User was succesful",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "245b3a76-9768-48ac-907f-0dc45174515f"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "User Services"
                ],
                "summary": "Updates the user",
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "description": "Id of the user to update",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "operationId": "updateUser",
                "responses": {
                    "200": {
                        "description": "Update User was succesful"
                    }
                }
            }
        },
        "/users/{user_id}": {
            "get": {
                "tags": [
                    "User Services"
                ],
                "summary": "Retrieves the user based on user id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "description": "Id of the user to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "operationId": "getUser",
                "responses": {
                    "200": {
                        "description": "User located using id",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/user"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/user"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "User Services"
                ],
                "summary": "Deletes the license by Id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "description": "Id of the license to delete",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "description": "format",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "description": "",
                "operationId": "deleteUser",
                "responses": {
                    "200": {
                        "description": "Delete User was succesful"
                    }
                }
            }
        },
        "/users/{user_id}/identities": {
            "get": {
                "tags": [
                    "User Services"
                ],
                "summary": "Returns the list of identities based on user id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "description": "returns a list of user identities",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "description": "",
                "operationId": "getUserIdentities",
                "responses": {
                    "200": {
                        "description": "License",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/identity"
                                    },
                                    "xml": {
                                        "name": "user_identities"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/identity"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{user_id}/platforms": {
            "get": {
                "tags": [
                    "Platform Services"
                ],
                "summary": "Returns the list of platforms based on user id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "description": "Id of the user to update",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "operationId": "getPlatforms",
                "responses": {
                    "200": {
                        "description": "License",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/platform"
                                    },
                                    "xml": {
                                        "name": "platforms"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/platform"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Platform Services"
                ],
                "summary": "Adds new platform based on user id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "description": "Id of the user to update",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "platform_id",
                        "required": true,
                        "description": "Id of the platform to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "operationId": "addUserPlatform",
                "responses": {
                    "200": {
                        "description": "Update User was succesful"
                    }
                }
            },
            "put": {
                "tags": [
                    "Platform Services"
                ],
                "summary": "Updates the license",
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "description": "Id of the user to update",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "platform_id",
                        "required": true,
                        "description": "Id of the platform to update",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "operationId": "updateUserPlatform",
                "responses": {
                    "200": {
                        "description": "Update User was succesful"
                    }
                }
            }
        },
        "/users/{user_id}/platforms/{platform_id}": {
            "get": {
                "tags": [
                    "Platform Services"
                ],
                "summary": "Retrieves the platform based on user and platform id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "description": "Id of the user to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "platform_id",
                        "required": true,
                        "description": "Id of the platform to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "operationId": "getUserPlatform",
                "responses": {
                    "200": {
                        "description": "User located using id",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/platform"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/platform"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Platform Services"
                ],
                "summary": "Deletes the license by Id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "description": "Id of the license to delete",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "platform_id",
                        "required": true,
                        "description": "Id of the platform to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "description": "format",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "description": "",
                "operationId": "deleteUserPlatform",
                "responses": {
                    "200": {
                        "description": "Delete User was succesful"
                    }
                }
            }
        },
        "/identity_providers": {
            "get": {
                "tags": [
                    "Identity Provider Services"
                ],
                "summary": "Returns the list of Identity Providers currently available in marketplace marketplace",
                "parameters": [
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "operationId": "getIdentityProviders",
                "responses": {
                    "200": {
                        "description": "getIdentityProviders",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/identity_provider"
                                    },
                                    "xml": {
                                        "name": "indentityProviders"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/identity_provider"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Identity Provider Services"
                ],
                "summary": "Adds a new Identity Provider to the marketplace",
                "parameters": [
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/IdentityProvider"
                },
                "description": "Identity Provider",
                "operationId": "addIdentityProvider",
                "responses": {
                    "200": {
                        "description": "Add Identity Provider was succesful"
                    }
                }
            },
            "put": {
                "tags": [
                    "Identity Provider Services"
                ],
                "summary": "Updates license by Id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "identity_provider_id",
                        "required": true,
                        "description": "Id of the Identity Provider to update",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "operationId": "updateIdentityProvider",
                "responses": {
                    "200": {
                        "description": "Update Identity Provider was succesful"
                    }
                }
            }
        },
        "/identity_providers/{identity_provider_id}": {
            "get": {
                "tags": [
                    "Identity Provider Services"
                ],
                "summary": "Retrieves the identity provider based on identity provider id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "identity_provider_id",
                        "required": true,
                        "description": "Id of the Identity Provider to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "operationId": "getIdentityProvider",
                "responses": {
                    "200": {
                        "description": "Identity Provider located using id",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/identity_provider"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/identity_provider"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Identity Provider Services"
                ],
                "summary": "Deletes the license by Id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "identity_provider_id",
                        "required": true,
                        "description": "Id of the Identity Provider to delete",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "description": "format",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "description": "",
                "operationId": "deleteIdentityProvider",
                "responses": {
                    "200": {
                        "description": "Delete Identity Provider was succesful"
                    }
                }
            }
        },
        "/groups": {
            "get": {
                "tags": [
                    "Group Services"
                ],
                "summary": "Returns the list of groups currently available in the marketplace",
                "parameters": [
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "operationId": "getGroups",
                "responses": {
                    "200": {
                        "description": "License",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/group"
                                    },
                                    "xml": {
                                        "name": "groups"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/group"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Group Services"
                ],
                "summary": "Adds a new group to the marketplace",
                "parameters": [
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/Group"
                },
                "description": "",
                "operationId": "addGroup",
                "responses": {
                    "200": {
                        "description": "Add Group was succesful"
                    }
                }
            },
            "put": {
                "tags": [
                    "Group Services"
                ],
                "summary": "Updates license by Id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "required": true,
                        "description": "Id of the license to update",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "operationId": "updateGroup",
                "responses": {
                    "200": {
                        "description": "Update Group was succesful"
                    }
                }
            }
        },
        "/groups/{group_id}": {
            "get": {
                "tags": [
                    "Group Services"
                ],
                "summary": "Retrieves the group based on group id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "required": true,
                        "description": "Id of the group to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "operationId": "getGroup",
                "responses": {
                    "200": {
                        "description": "Group located using id",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/group"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/group"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Group Services"
                ],
                "summary": "Deletes the license by Id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "required": true,
                        "description": "Id of the license to delete",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "description": "format",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "description": "",
                "operationId": "deleteGroup",
                "responses": {
                    "200": {
                        "description": "Delete Group was succesful"
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "tags": [
                    "Role Services"
                ],
                "summary": "Returns the list of roles currently available in the marketplace",
                "parameters": [
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "operationId": "getRoles",
                "responses": {
                    "200": {
                        "description": "License",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/role"
                                    },
                                    "xml": {
                                        "name": "roles"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/role"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Role Services"
                ],
                "summary": "Adds a new Role to the marketplace",
                "parameters": [
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/Role"
                },
                "description": "",
                "operationId": "addRole",
                "responses": {
                    "200": {
                        "description": "Add Role was succesful"
                    }
                }
            },
            "put": {
                "tags": [
                    "Role Services"
                ],
                "summary": "Updates license by Id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "role_id",
                        "required": true,
                        "description": "Id of the license to update",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "operationId": "updateRole",
                "responses": {
                    "200": {
                        "description": "Update Role was succesful"
                    }
                }
            }
        },
        "/roles/{role_id}": {
            "get": {
                "tags": [
                    "Role Services"
                ],
                "summary": "Retrieves the role based on role id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "role_id",
                        "required": true,
                        "description": "Id of the role to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "operationId": "getRole",
                "responses": {
                    "200": {
                        "description": "Role located using id",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/role"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/role"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Role Services"
                ],
                "summary": "Deletes the license by Id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "role_id",
                        "required": true,
                        "description": "Id of the license to delete",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "description": "format",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "description": "",
                "operationId": "deleteRole",
                "responses": {
                    "200": {
                        "description": "Delete Role was succesful"
                    }
                }
            }
        },
        "/products/{product_id}/logos": {
            "get": {
                "tags": [
                    "Product Logo Services"
                ],
                "summary": "Returns the list of logos based on the product id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the license to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "operationId": "getLogos",
                "responses": {
                    "200": {
                        "description": "Logo",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/logo"
                                    },
                                    "xml": {
                                        "name": "logos"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/logo"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the logo to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Product Logo Services"
                ],
                "summary": "Adds a new logo based on product id",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/requestBodies/Logo"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/requestBodies/Logo"
                            }
                        }
                    },
                    "description": "Logo to be added to the marketplace",
                    "required": true
                },
                "operationId": "createLogo",
                "responses": {
                    "200": {
                        "description": "Add Logo was succesful",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "245b3a76-9768-48ac-907f-0dc45174515f"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Product Logo Services"
                ],
                "summary": "Updates logo by Id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the product",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "logoId",
                        "required": true,
                        "description": "Id of the logo to update",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/logo"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/logo"
                            }
                        }
                    },
                    "description": "Logo to be added to the marketplace",
                    "required": true
                },
                "operationId": "updateLogo",
                "responses": {
                    "200": {
                        "description": "True for updated"
                    }
                }
            }
        },
        "/products/{product_id}/logos/{logoId}": {
            "get": {
                "tags": [
                    "Product Logo Services"
                ],
                "summary": "Retrieves the logo based on product and logo id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the product to retrieve logos",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "logoId",
                        "required": true,
                        "description": "Id of the logo to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "operationId": "getLogo",
                "responses": {
                    "200": {
                        "description": "Logo located using id",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/logo"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/logo"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Product Logo Services"
                ],
                "summary": "Deletes the logo by Id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the product",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "logoId",
                        "required": true,
                        "description": "Id of the logo to delete",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "operationId": "deleteLogo",
                "responses": {
                    "200": {
                        "description": "True if delete was successful"
                    }
                }
            }
        },
        "/products/{product_id}/screenshots": {
            "get": {
                "tags": [
                    "Product Screenshot Services"
                ],
                "summary": "Returns the list of screenshots based on product id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the product to retrieve screenshots from",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "operationId": "getScreenshots",
                "responses": {
                    "200": {
                        "description": "Screenshot",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/screenshot"
                                    },
                                    "xml": {
                                        "name": "screenshots"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/screenshot"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the product to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Product Screenshot Services"
                ],
                "summary": "Adds a new screenshots based on product id",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/requestBodies/Screenshot"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/requestBodies/Screenshot"
                            }
                        }
                    },
                    "description": "Screenshot to be added to the marketplace",
                    "required": true
                },
                "operationId": "createScreenshot",
                "responses": {
                    "200": {
                        "description": "Add Screenshot was succesful",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "245b3a76-9768-48ac-907f-0dc45174515f"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Product Screenshot Services"
                ],
                "summary": "Updates license by Id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the license to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "screenshot_id",
                        "required": true,
                        "description": "Id of the screenshot to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "logoId",
                        "required": true,
                        "description": "Id of the license to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/screenshot"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/screenshot"
                            }
                        }
                    },
                    "description": "Screenshot to be added to the marketplace",
                    "required": true
                },
                "operationId": "updateScreenshot",
                "responses": {
                    "200": {
                        "description": "True for updated"
                    }
                }
            }
        },
        "/products/{product_id}/screenshots/{screenshot_id}": {
            "get": {
                "tags": [
                    "Product Screenshot Services"
                ],
                "summary": "Retrieves the screenshot based on product and screenshot id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the license to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "screenshot_id",
                        "required": true,
                        "description": "Id of the screenshot to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "operationId": "getScreenshot",
                "responses": {
                    "200": {
                        "description": "Screenshot located using id",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/screenshot"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/screenshot"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Product Screenshot Services"
                ],
                "summary": "Deletes the license by Id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the license to delete",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "screenshot_id",
                        "required": true,
                        "description": "Id of the screenshot to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "logoId",
                        "required": true,
                        "description": "Id of the license to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "operationId": "deleteScreenshot",
                "responses": {
                    "200": {
                        "description": "True if delete was successful"
                    }
                }
            }
        },
        "/products/{product_id}/builds/{build_id}/configurations": {
            "get": {
                "tags": [
                    "Product Build Configuration Services"
                ],
                "summary": "Returns the list of configurations based on product and build id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the products to add build to",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "build_id",
                        "required": true,
                        "description": "Id of the products to add build to",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "operationId": "getConfigurations",
                "responses": {
                    "200": {
                        "description": "License",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/configuration"
                                    },
                                    "xml": {
                                        "name": "configurations"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/configuration"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Product Build Configuration Services"
                ],
                "summary": "Adds a new configuration based on prodcut and build id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the products to add build to",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "build_id",
                        "required": true,
                        "description": "Id of the products to add build to",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/requestBodies/Configuration"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/requestBodies/Configuration"
                            }
                        }
                    }
                },
                "operationId": "addConfiguration",
                "responses": {
                    "200": {
                        "description": "Add Configuration Succesful",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "245b3a76-9768-48ac-907f-0dc45174515f"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Product Build Configuration Services"
                ],
                "summary": "Updates product by Id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the product to update",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "build_id",
                        "required": true,
                        "description": "Id of the products to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "configuration_id",
                        "required": true,
                        "description": "Id of the products to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "Configuration",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/requestBodies/Configuration"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/requestBodies/Configuration"
                            }
                        }
                    }
                },
                "operationId": "updateConfiguration",
                "responses": {
                    "200": {
                        "description": "Update Succesful"
                    }
                }
            }
        },
        "/products/{product_id}/builds/{build_id}/configurations/{configuration_id}": {
            "get": {
                "tags": [
                    "Product Build Configuration Services"
                ],
                "summary": "Retrieves the configuration based on product, build, configuration id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the products to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "build_id",
                        "required": true,
                        "description": "Id of the products to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "configuration_id",
                        "required": true,
                        "description": "Id of the products to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "operationId": "getConfiguration",
                "responses": {
                    "200": {
                        "description": "Configuration located using product Id and build Id",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/configuration"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/configuration"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Product Build Configuration Services"
                ],
                "summary": "Deletes the Configuration by Id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the product to delete",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "build_id",
                        "required": true,
                        "description": "Id of the products to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "configuration_id",
                        "required": true,
                        "description": "Id of the products to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "description": "format",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "description": "",
                "operationId": "deleteConfiguration",
                "responses": {
                    "200": {
                        "description": "Delete Succesful"
                    }
                }
            }
        },
        "/products/{product_id}/builds/{build_id}/configurations/{configuration_id}/tasks": {
            "get": {
                "tags": [
                    "Product Build Configuration Task Services"
                ],
                "summary": "Returns the list of tasks based on product, build, configuration id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the products to add build to",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "build_id",
                        "required": true,
                        "description": "Id of the products to add build to",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "configuration_id",
                        "required": true,
                        "description": "Id of the products to add build to",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "operationId": "getConfigurationTasks",
                "responses": {
                    "200": {
                        "description": "License",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/task"
                                    },
                                    "xml": {
                                        "name": "tasks"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/task"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Product Build Configuration Task Services"
                ],
                "summary": "Adds a new task based on product, build, and configuration id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the products to add build to",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "build_id",
                        "required": true,
                        "description": "Id of the products to add build to",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "configuration_id",
                        "required": true,
                        "description": "Id of the products to add build to",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/requestBodies/Task"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/requestBodies/Task"
                            }
                        }
                    }
                },
                "operationId": "addConfigurationTask",
                "responses": {
                    "200": {
                        "description": "Add Configuration Succesful",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "245b3a76-9768-48ac-907f-0dc45174515f"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Product Build Configuration Task Services"
                ],
                "summary": "Updates product by Id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the product to update",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "build_id",
                        "required": true,
                        "description": "Id of the products to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "configuration_id",
                        "required": true,
                        "description": "Id of the products to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "task_id",
                        "required": true,
                        "description": "Id of the products to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/requestBodies/Task"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/requestBodies/Task"
                            }
                        }
                    }
                },
                "operationId": "updateConfigurationTask",
                "responses": {
                    "200": {
                        "description": "Update Succesful"
                    }
                }
            }
        },
        "/products/{product_id}/builds/{build_id}/configurations/{configuration_id}/task/{task_id}": {
            "get": {
                "tags": [
                    "Product Build Configuration Task Services"
                ],
                "summary": "Retrieves the task based on product, build, configuration, task id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the products to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "build_id",
                        "required": true,
                        "description": "Id of the products to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "configuration_id",
                        "required": true,
                        "description": "Id of the products to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "task_id",
                        "required": true,
                        "description": "Id of the products to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "operationId": "getConfigurationTask",
                "responses": {
                    "200": {
                        "description": "Configuration located using product Id and build Id",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/task"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/task"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Product Build Configuration Task Services"
                ],
                "summary": "Deletes the Configuration by Id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the product to delete",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "build_id",
                        "required": true,
                        "description": "Id of the products to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "configuration_id",
                        "required": true,
                        "description": "Id of the products to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "task_id",
                        "required": true,
                        "description": "Id of the products to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "description": "format",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "description": "",
                "operationId": "deleteConfigurationTask",
                "responses": {
                    "200": {
                        "description": "Delete Succesful"
                    }
                }
            }
        },
        "/products/{product_id}/builds/{build_id}/dependencies": {
            "get": {
                "tags": [
                    "Product Build Dependency Services"
                ],
                "summary": "Returns the list of dependencies based on product and build id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the products to add dependency",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "build_id",
                        "required": true,
                        "description": "Id of the build to add dependency",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "operationId": "getDependencies",
                "responses": {
                    "200": {
                        "description": "License",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/dependency"
                                    },
                                    "xml": {
                                        "name": "dependencies"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/dependency"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Product Build Dependency Services"
                ],
                "summary": "Adds a new dependency based on product and build id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the product to update dependency",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "build_id",
                        "required": true,
                        "description": "Id of the build to update dependency",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/requestBodies/Dependency"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/requestBodies/Dependency"
                            }
                        }
                    }
                },
                "operationId": "addDependency",
                "responses": {
                    "200": {
                        "description": "Add Dependency Succesful",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "245b3a76-9768-48ac-907f-0dc45174515f"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Product Build Dependency Services"
                ],
                "summary": "Updates dependency based on product and build id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the product to update dependency",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "build_id",
                        "required": true,
                        "description": "Id of the build to update dependency",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/requestBodies/Dependency"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/requestBodies/Dependency"
                            }
                        }
                    }
                },
                "operationId": "updateDepenedency",
                "responses": {
                    "200": {
                        "description": "Update Succesful"
                    }
                }
            }
        },
        "/products/{product_id}/builds/{build_id}/dependencies/{dependency_id}": {
            "get": {
                "tags": [
                    "Product Build Dependency Services"
                ],
                "summary": "Retrieves the dependency based on product, build and dependency id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the products to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "build_id",
                        "required": true,
                        "description": "Id of the products to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "dependency_id",
                        "required": true,
                        "description": "Id of the products to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "operationId": "getDependency",
                "responses": {
                    "200": {
                        "description": "Dependency located using product Id and build Id",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/dependency"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dependency"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Product Build Dependency Services"
                ],
                "summary": "Deletes dependency based on product, build and dependency id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the product to delete",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "build_id",
                        "required": true,
                        "description": "Id of the products to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "dependency_id",
                        "required": true,
                        "description": "Id of the products to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "description": "format",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "description": "",
                "operationId": "deleteDependency",
                "responses": {
                    "200": {
                        "description": "Delete Succesful"
                    }
                }
            }
        },
        "/products/{product_id}/builds/{build_id}/exposures": {
            "get": {
                "tags": [
                    "Product Build Exposure Services"
                ],
                "summary": "Returns the list of exposures based on product and build id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the products to add build to",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "build_id",
                        "required": true,
                        "description": "Id of the products to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "operationId": "getExposures",
                "responses": {
                    "200": {
                        "description": "License",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/exposure"
                                    },
                                    "xml": {
                                        "name": "exposures"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/exposure"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Product Build Exposure Services"
                ],
                "summary": "Adds a new exposures based on product and build id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the products to add build to",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "build_id",
                        "required": true,
                        "description": "Id of the products to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/requestBodies/Exposure"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/requestBodies/Exposure"
                            }
                        }
                    }
                },
                "operationId": "addExposure",
                "responses": {
                    "200": {
                        "description": "Add Dependency Succesful",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "245b3a76-9768-48ac-907f-0dc45174515f"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Product Build Exposure Services"
                ],
                "summary": "Updates product by Id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the product to update",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "build_id",
                        "required": true,
                        "description": "Id of the products to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "exposureId",
                        "required": true,
                        "description": "Id of the products to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/requestBodies/Exposure"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/requestBodies/Exposure"
                            }
                        }
                    }
                },
                "operationId": "updateExposure",
                "responses": {
                    "200": {
                        "description": "Update Succesful"
                    }
                }
            }
        },
        "/products/{product_id}/builds/{build_id}/exposures/{exposureId}": {
            "get": {
                "tags": [
                    "Product Build Exposure Services"
                ],
                "summary": "Retrieves the exposure based on product and build id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the products to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "build_id",
                        "required": true,
                        "description": "Id of the products to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "exposureId",
                        "required": true,
                        "description": "Id of the products to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "operationId": "getExposure",
                "responses": {
                    "200": {
                        "description": "Dependency located using product Id and build Id",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/exposure"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/exposure"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Product Build Exposure Services"
                ],
                "summary": "Deletes the Dependency by Id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "required": true,
                        "description": "Id of the product to delete",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "build_id",
                        "required": true,
                        "description": "Id of the products to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "exposureId",
                        "required": true,
                        "description": "Id of the products to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "description": "format",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "description": "",
                "operationId": "deleteExposure",
                "responses": {
                    "200": {
                        "description": "Delete Succesful"
                    }
                }
            }
        },
        "/entitlements": {
            "get": {
                "tags": [
                    "Entitlement Services"
                ],
                "summary": "Returns the list of entitlements currently available by the marketplace",
                "parameters": [
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "operationId": "getEntitlements",
                "responses": {
                    "200": {
                        "description": "Entitlement",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/entitlement"
                                    },
                                    "xml": {
                                        "name": "entitlements"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/entitlement"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Entitlement Services"
                ],
                "summary": "Adds a new entitlement to the marketplace",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/requestBodies/Entitlement"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/requestBodies/Entitlement"
                            }
                        }
                    },
                    "description": "Entitlement to be added to the marketplace",
                    "required": true
                },
                "operationId": "createEntitlement",
                "responses": {
                    "200": {
                        "description": "Add Entitlement was succesful",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "245b3a76-9768-48ac-907f-0dc45174515f"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/entitlements/{entitlement_id}": {
            "get": {
                "tags": [
                    "Entitlement Services"
                ],
                "summary": "Retrieves the entitlement based on entitlement id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "entitlement_id",
                        "required": true,
                        "description": "Id of the entitlement to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "operationId": "getEntitlement",
                "responses": {
                    "200": {
                        "description": "Entitlement located using id",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/entitlement"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entitlement"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Entitlement Services"
                ],
                "summary": "Updates entitlement by Id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "entitlement_id",
                        "required": true,
                        "description": "Id of the entitlement to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/entitlement"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/entitlement"
                            }
                        }
                    },
                    "description": "Entitlement to be added to the marketplace",
                    "required": true
                },
                "operationId": "updateEntitlement",
                "responses": {
                    "200": {
                        "description": "True for updated"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Entitlement Services"
                ],
                "summary": "Deletes the entitlement by Id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "entitlement_id",
                        "required": true,
                        "description": "Id of the entitlement to delete",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "operationId": "deleteEntitlement",
                "responses": {
                    "200": {
                        "description": "True if delete was successful"
                    }
                }
            }
        },
        "/attempts": {
            "get": {
                "tags": [
                    "Attempt Services"
                ],
                "summary": "Returns the list of attempts currently available in the marketplace",
                "parameters": [
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "operationId": "getAttempts",
                "responses": {
                    "200": {
                        "description": "Attempt",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/attempt"
                                    },
                                    "xml": {
                                        "name": "attempts"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/attempt"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Attempt Services"
                ],
                "summary": "Adds a new attempt to the marketplace",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/requestBodies/Attempt"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/requestBodies/Attempt"
                            }
                        }
                    },
                    "description": "Attempt to be added to the marketplace",
                    "required": true
                },
                "operationId": "createAttempt",
                "responses": {
                    "200": {
                        "description": "Add Attempt was succesful",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "245b3a76-9768-48ac-907f-0dc45174515f"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Attempt Services"
                ],
                "summary": "Updates attempt by Id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "attempt_id",
                        "required": true,
                        "description": "Id of the attempt to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/attempt"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/attempt"
                            }
                        }
                    },
                    "description": "Attempt to be added to the marketplace",
                    "required": true
                },
                "operationId": "updateAttempt",
                "responses": {
                    "200": {
                        "description": "True for updated\n\n- 'write:attempts' - 'read:attempts'"
                    }
                }
            }
        },
        "/attempts/{attempt_id}": {
            "get": {
                "tags": [
                    "Attempt Services"
                ],
                "summary": "Retrieves the attempt based on attempt id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "attempt_id",
                        "required": true,
                        "description": "Id of the attempt to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "operationId": "getAttempt",
                "responses": {
                    "200": {
                        "description": "Attempt located using id",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/attempt"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/attempt"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Attempt Services"
                ],
                "summary": "Deletes the attempt by Id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "attempt_id",
                        "required": true,
                        "description": "Id of the attempt to delete",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "operationId": "deleteAttempt",
                "responses": {
                    "200": {
                        "description": "True if delete was successful"
                    }
                }
            }
        },
        "/vouchers": {
            "get": {
                "tags": [
                    "Voucher Services"
                ],
                "summary": "Returns the list of vouchers currently available in the marketplace",
                "parameters": [
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "operationId": "getVouchers",
                "responses": {
                    "200": {
                        "description": "Voucher",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/voucher"
                                    },
                                    "xml": {
                                        "name": "vouchers"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/voucher"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Voucher Services"
                ],
                "summary": "Adds a new voucher to the marketplace",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/requestBodies/Voucher"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/requestBodies/Voucher"
                            }
                        }
                    },
                    "description": "Voucher to be added to the marketplace",
                    "required": true
                },
                "operationId": "createVoucher",
                "responses": {
                    "200": {
                        "description": "Add Voucher was succesful",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "245b3a76-9768-48ac-907f-0dc45174515f"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Voucher Services"
                ],
                "summary": "Updates voucher by Id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "voucher_id",
                        "required": true,
                        "description": "Id of the voucher to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/voucher"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/voucher"
                            }
                        }
                    },
                    "description": "Voucher to be added to the marketplace",
                    "required": true
                },
                "operationId": "updateVoucher",
                "responses": {
                    "200": {
                        "description": "True for updated\n\n- 'write:vouchers' - 'read:vouchers'"
                    }
                }
            }
        },
        "/vouchers/{voucher_id}": {
            "get": {
                "tags": [
                    "Voucher Services"
                ],
                "summary": "Retrieves the voucher based on voucher id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "voucher_id",
                        "required": true,
                        "description": "Id of the voucher to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "operationId": "getVoucher",
                "responses": {
                    "200": {
                        "description": "Voucher located using id",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/voucher"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/voucher"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Voucher Services"
                ],
                "summary": "Deletes the voucher by Id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "voucher_id",
                        "required": true,
                        "description": "Id of the voucher to delete",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "operationId": "deleteVoucher",
                "responses": {
                    "200": {
                        "description": "True if delete was successful"
                    }
                }
            }
        },
        "/roles/{role_id}/appointments": {
            "get": {
                "tags": [
                    "Role Appointment Services"
                ],
                "summary": "Returns the list of appointments based on role id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "role_id",
                        "required": true,
                        "description": "Id of the attempt to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "operationId": "getAppointments",
                "responses": {
                    "200": {
                        "description": "Appointment",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/appointment"
                                    },
                                    "xml": {
                                        "name": "appointments"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/appointment"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Role Appointment Services"
                ],
                "summary": "Adds a new appointments based on role id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "role_id",
                        "required": true,
                        "description": "Id of the attempt to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/requestBodies/Appointment"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/requestBodies/Appointment"
                            }
                        }
                    },
                    "description": "Appointment to be added to the marketplace",
                    "required": true
                },
                "operationId": "createAppointment",
                "responses": {
                    "200": {
                        "description": "Add Appointment was succesful",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "245b3a76-9768-48ac-907f-0dc45174515f"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Role Appointment Services"
                ],
                "summary": "Updates appointment specified by role id and appointment id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "role_id",
                        "required": true,
                        "description": "Id of the attempt to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "appointment_id",
                        "required": true,
                        "description": "Id of the attempt to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/appointment"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/appointment"
                            }
                        }
                    },
                    "description": "Appointment to be added to the marketplace",
                    "required": true
                },
                "operationId": "updateAppointment",
                "responses": {
                    "200": {
                        "description": "True for updated"
                    }
                }
            }
        },
        "/roles/{role_id}/appointments/{appointment_id}": {
            "get": {
                "tags": [
                    "Role Appointment Services"
                ],
                "summary": "Retrieves the appointment based on role and appointment id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "role_id",
                        "required": true,
                        "description": "Id of the attempt to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "appointment_id",
                        "required": true,
                        "description": "Id of the attempt to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "operationId": "getAppointment",
                "responses": {
                    "200": {
                        "description": "Appointment located using id",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/appointment"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/appointment"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Role Appointment Services"
                ],
                "summary": "Deletes the appointment specified by role id and appointment id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "role_id",
                        "required": true,
                        "description": "Id of the attempt to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "appointment_id",
                        "required": true,
                        "description": "Id of the attempt to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "operationId": "deleteAppointment",
                "responses": {
                    "200": {
                        "description": "True if delete was successful"
                    }
                }
            }
        },
        "/entitlements/{entitlement_id}/claims": {
            "get": {
                "tags": [
                    "Entitlement Claim Services"
                ],
                "summary": "Returns the list of claims based on entitlement id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "entitlement_id",
                        "required": true,
                        "description": "Id of the claim to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "operationId": "getClaims",
                "responses": {
                    "200": {
                        "description": "Claim",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/appointment"
                                    },
                                    "xml": {
                                        "name": "claims"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/appointment"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Entitlement Claim Services"
                ],
                "summary": "Adds a new claim based on entitlement id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "entitlement_id",
                        "required": true,
                        "description": "Id of the claim to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/requestBodies/Claim"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/requestBodies/Claim"
                            }
                        }
                    },
                    "description": "Appointment to be added to the marketplace",
                    "required": true
                },
                "operationId": "createClaim",
                "responses": {
                    "200": {
                        "description": "Add Claim was succesful",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "245b3a76-9768-48ac-907f-0dc45174515f"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Entitlement Claim Services"
                ],
                "summary": "Updates claim specified by entitlement id and claim id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "entitlement_id",
                        "required": true,
                        "description": "Id of the claim to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "claimId",
                        "required": true,
                        "description": "Id of the claim to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/claim"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/claim"
                            }
                        }
                    },
                    "description": "Appointment to be added to the marketplace",
                    "required": true
                },
                "operationId": "updateClaim",
                "responses": {
                    "200": {
                        "description": "True for updated"
                    }
                }
            }
        },
        "/entitlements/{entitlement_id}/claims/{claimId}": {
            "get": {
                "tags": [
                    "Entitlement Claim Services"
                ],
                "summary": "Retrieves the claim based on entitlement and claim id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "entitlement_id",
                        "required": true,
                        "description": "Id of the claim to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "claimId",
                        "required": true,
                        "description": "Id of the claim to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "format",
                        "description": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "xml",
                                "json"
                            ]
                        }
                    }
                ],
                "description": "",
                "operationId": "getClaim",
                "responses": {
                    "200": {
                        "description": "Claim located using id and Entitlement id",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/claim"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/claim"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Entitlement Claim Services"
                ],
                "summary": "Deletes claim specified by entitlement id and claim id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "entitlement_id",
                        "required": true,
                        "description": "Id of the claim to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "claimId",
                        "required": true,
                        "description": "Id of the claim to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "operationId": "deleteClaim",
                "responses": {
                    "200": {
                        "description": "True if delete was successful"
                    }
                }
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about Health Services Platform Marketplace",
        "url": "https://www.logicahealth.org"
    },
    "servers": [
        {
            "url": "http://localhost:3000"
        },
        {
            "url": "https://marketplace-server-test.logicahealth.org"
        },
        {
            "url": "https://marketplace-server.logicahealth.org"
        }
    ],
    "components": {
        "requestBodies": {
            "License": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/license"
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/license"
                        }
                    }
                },
                "description": "License",
                "required": true
            },
            "Product": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/product"
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/product"
                        }
                    }
                },
                "description": "Product",
                "required": true
            },
            "User": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/user"
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/user"
                        }
                    }
                },
                "description": "User",
                "required": true
            },
            "Build": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/build"
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/build"
                        }
                    }
                },
                "description": "Build",
                "required": true
            },
            "Interface": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/interface"
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/interface"
                        }
                    }
                },
                "description": "Interface",
                "required": true
            },
            "IdentityProvider": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/identity_provider"
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/identity_provider"
                        }
                    }
                },
                "description": "Identity Provider",
                "required": true
            },
            "Role": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/role"
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/role"
                        }
                    }
                },
                "description": "Role",
                "required": true
            },
            "Group": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/group"
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/group"
                        }
                    }
                },
                "description": "A named collection of Users for purposes of batch Role assignment.",
                "required": true
            },
            "Logo": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/logo"
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/logo"
                        }
                    }
                },
                "description": "Logo",
                "required": true
            },
            "Screenshot": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/screenshot"
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/screenshot"
                        }
                    }
                },
                "description": "Screenshot",
                "required": true
            },
            "Configuration": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/configuration"
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/configuration"
                        }
                    }
                },
                "description": "Configuration",
                "required": true
            },
            "Dependency": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/dependency"
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/dependency"
                        }
                    }
                },
                "description": "Dependency",
                "required": true
            },
            "Exposure": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/exposure"
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/exposure"
                        }
                    }
                },
                "description": "Exposure",
                "required": true
            },
            "Task": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/task"
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/task"
                        }
                    }
                },
                "description": "Task",
                "required": true
            },
            "Entitlement": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/entitlement"
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/entitlement"
                        }
                    }
                },
                "description": "Entitlement",
                "required": true
            },
            "Attempt": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/entitlement"
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/entitlement"
                        }
                    }
                },
                "description": "Attempt",
                "required": true
            },
            "Appointment": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/appointment"
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/appointment"
                        }
                    }
                },
                "description": "Appointment",
                "required": true
            },
            "Claim": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/claim"
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/claim"
                        }
                    }
                },
                "description": "Claim",
                "required": true
            },
            "Voucher": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/voucher"
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/voucher"
                        }
                    }
                },
                "description": "License",
                "required": true
            }
        },
        "securitySchemes": {
            "licensestore_auth": {
                "type": "oauth2",
                "flows": {
                    "implicit": {
                        "authorizationUrl": "https://licensestore.swagger.io/oauth/authorize",
                        "scopes": {
                            "write:licenses": "modify licenses in your account",
                            "read:licenses": "read your licenses"
                        }
                    }
                }
            },
            "interfacestore_auth": {
                "type": "oauth2",
                "flows": {
                    "implicit": {
                        "authorizationUrl": "https://interfacestore.swagger.io/oauth/authorize",
                        "scopes": {
                            "write:interfaces": "modify interfaces in your account",
                            "read:interfaces": "read your interfaces"
                        }
                    }
                }
            },
            "api_key": {
                "type": "apiKey",
                "name": "api_key",
                "in": "header"
            }
        },
        "schemas": {
            "interface": {
                "type": "object",
                "xml": {
                    "name": "Interface"
                },
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string",
                        "format": "uri"
                    },
                    "version": {
                        "type": "string"
                    },
                    "ordinal": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "user": {
                "type": "object",
                "xml": {
                    "name": "User"
                },
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "familyName": {
                        "type": "string"
                    },
                    "givenName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "role": {
                "type": "object",
                "xml": {
                    "name": "role"
                },
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "permissions": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "group": {
                "type": "object",
                "xml": {
                    "name": "group"
                },
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "license": {
                "type": "object",
                "xml": {
                    "name": "license"
                },
                "required": [
                    "name",
                    "license",
                    "terms"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string",
                        "format": "url"
                    },
                    "path": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "license": {
                        "type": "string",
                        "format": "url"
                    },
                    "terms": {
                        "type": "string"
                    }
                }
            },
            "product": {
                "type": "object",
                "xml": {
                    "name": "product"
                },
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string",
                        "format": "uri"
                    },
                    "support": {
                        "type": "string"
                    },
                    "license": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "approved_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "visible_from": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "blob": {
                        "type": "string",
                        "format": "binary"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "build": {
                "type": "object",
                "xml": {
                    "name": "build"
                },
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "software_version": {
                        "type": "string"
                    },
                    "build_version": {
                        "type": "string"
                    },
                    "container_repository": {
                        "type": "string"
                    },
                    "container_tag": {
                        "type": "string"
                    },
                    "validated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "published_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "permissions": {
                        "type": "string"
                    },
                    "release_notes": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "identity_provider": {
                "type": "object",
                "xml": {
                    "name": "identityProvider"
                },
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "client_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "clientSecret": {
                        "type": "string"
                    },
                    "alternateClient_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "configuration": {
                        "type": "string"
                    },
                    "publicKeys": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "identity": {
                "type": "object",
                "xml": {
                    "name": "identity"
                },
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "identity_provider_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "sub": {
                        "type": "string"
                    },
                    "iat": {
                        "type": "string"
                    },
                    "hd": {
                        "type": "string"
                    },
                    "locale": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "jwt": {
                        "type": "string"
                    },
                    "nofityViaEmail": {
                        "type": "string"
                    },
                    "nofityViaSMS": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "platform": {
                "type": "object",
                "xml": {
                    "name": "platform"
                },
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "public_key": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "logo": {
                "type": "object",
                "xml": {
                    "name": "logo"
                },
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "image_file_content": {
                        "type": "string",
                        "format": "binary"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "screenshot": {
                "type": "object",
                "xml": {
                    "name": "Screenshot"
                },
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "product_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "caption": {
                        "type": "string"
                    },
                    "image_file_content": {
                        "type": "string",
                        "format": "binary"
                    },
                    "image_file_size": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "configuration": {
                "type": "object",
                "xml": {
                    "name": "configuration"
                },
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "build_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "exposure": {
                "type": "object",
                "xml": {
                    "name": "exposure"
                },
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "build_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "interface_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "entitlement": {
                "type": "object",
                "xml": {
                    "name": "entitlement"
                },
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "product_license_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "valid_from": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "attempt": {
                "type": "object",
                "xml": {
                    "name": "attempt"
                },
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "claim_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "claimant_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "claimant_type": {
                        "type": "string"
                    },
                    "product_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "appointment": {
                "type": "object",
                "xml": {
                    "name": "appointment"
                },
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "entry_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "entry_type": {
                        "type": "string"
                    },
                    "role_id": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "claim": {
                "type": "object",
                "xml": {
                    "name": "claim"
                },
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "claimant_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "claimant_type": {
                        "type": "string"
                    },
                    "entitlement_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "authorization_count": {
                        "type": "string"
                    },
                    "authorized_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "voucher": {
                "type": "object",
                "xml": {
                    "name": "voucher"
                },
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "token": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "entitlement_id": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "dependency": {
                "type": "object",
                "required": [
                    "uuid",
                    "build"
                ],
                "properties": {
                    "uuid": {
                        "description": "Product UUID of the thing this is dependent upon.",
                        "type": "string"
                    },
                    "build": {
                        "type": "array",
                        "description": "Permitted set of build UUIDs that will satisfy the dependency.",
                        "items": {
                            "type": "string",
                            "description": "An explicit build UUID that willproduct dependency."
                        }
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "interface_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "required": {
                        "type": "boolean"
                    },
                    "mappings": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "task": {
                "type": "object",
                "required": [
                    "id",
                    "configuration_id",
                    "label"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "configuration_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "label": {
                        "type": "string",
                        "description": "Human-readable name used for user presentation."
                    },
                    "memory_minimum": {
                        "type": "number",
                        "description": "Minimum memory (in MiB) required for the task to function at runtime.",
                        "minimum": 1
                    },
                    "memory_maximum": {
                        "type": "number",
                        "description": "Maximum memory (in MiB) the task may allocate at runtime.",
                        "minimum": 1
                    },
                    "instances_minimum": {
                        "type": "number",
                        "description": "The fewest instances (inclusive) of the task required at runtime.",
                        "minimum": 0
                    },
                    "instances_maximum": {
                        "type": "number",
                        "description": "The largest allowable number of instances (inclusive) of the task allowed at runtime. Default: unlimited",
                        "minimum": 0
                    },
                    "options": {
                        "type": "array",
                        "description": "Static parameters passed into the task at runtime. E.g. ['--mode', 'production']",
                        "items": {
                            "type": "string"
                        }
                    },
                    "ports": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    },
                    "cron": {
                        "type": "string",
                        "description": "cron schedule in `* * * * *` format for periodic tasks. See https://codebeautify.org/crontab-format for syntax"
                    },
                    "environment": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "key",
                                "description"
                            ],
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "required": {
                                    "type": "boolean"
                                },
                                "default": {
                                    "type": "string"
                                }
                            }
                        }}
                    }
                }
            }
        }
    }